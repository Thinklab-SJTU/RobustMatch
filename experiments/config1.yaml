MODEL_NAME: vgg16_ngmv2
DATASET_NAME: voc

DATASET_FULL_NAME: PascalVOC

MODULE: models.NGM.model_v2

BACKBONE: VGG16_bn_final

BATCH_SIZE: 8
DATALOADER_NUM: 2
FP16: False

RANDOM_SEED: 123

# available GPU ids
GPUS:
  - 0

# Problem configuration
PROBLEM:
  TYPE: 2GM
  RESCALE:  # rescaled image size
    - 256
    - 256

# Graph construction settings
GRAPH:
  SRC_GRAPH_CONSTRUCT: tri
  TGT_GRAPH_CONSTRUCT: tri
  SYM_ADJACENCY: True

# Training settings
TRAIN:
  # start, end epochs
  START_EPOCH: 0 
  NUM_EPOCHS: 16

  MODE: 2step # choices = ['at', '2step']
  LOSS_FUNC: ourloss # choices = ['perm', 'ourloss', 'hamming', ...]

  # for '2step' mode
  BURN_IN_PERIOD: 5

  # for AAR regularizer
  REG_LEVEL: 1
  REG_RATIO: 1.5

  # whether to synchronize optimization way for min-max AT framework, default: false
  SYNC_MINMAX: 0

  # set BN mode as evaluation during generating adversarial examples
  BN_EVAL: True

  OPTIMIZER: Adam
  # learning rate
  LR: 2.e-3
  SEPARATE_BACKBONE_LR: True
  BACKBONE_LR: 2.e-5
  MOMENTUM: 0.9
  LR_DECAY: 0.5
  LR_STEP:  # (in epochs)
    - 2
    - 4
    - 6
    - 8
    - 10

  EPOCH_ITERS: 2000  # iterations per epoch

  CLASS: none

# Evaluation settings
EVAL:
  EPOCH: 15  # where to continue evlauation based on training epochs
  SAMPLES: 1000  # number of tested pairs for each class
  NUM_EPOCH: 4 # evaluation period during training

  # model parameters
NGM:
  EDGE_FEATURE: cat
  FEATURE_CHANNEL: 512
  SK_ITER_NUM: 20
  SK_EPSILON: 1.0e-10
  SK_TAU: 0.05
  GNN_FEAT:
    - 16
    - 16
    - 16
  GNN_LAYER: 3
  GAUSSIAN_SIGMA: 1.
  SK_EMB: 1
  FIRST_ORDER: True
  EDGE_EMB: False

# Attack params for AT
ATTACK:
  # basic params
  EPSILON_FEATURE: 8
  EPSILON_LOCALITY: 8
  ALPHA: 1.
  STEP: 1
  EVAL_ALPHA: 0.25
  EVAL_STEP: 10
  RESTARTS: 1
  EARLY_STOP_RATIO: 0.
  # attack attributes
  TYPE: pgd # attack optimization way, choices = ['pgd', 'none', 'momentum', 'random']
  OBJ_TYPE: pixel # attack input object, choices = ['pixel', 'pos', 'struc', 'pos+struc', 'pixel+pos', 'pixel+pos+struc']
  LOSS_FUNC: perm # attack loss objective, choices = ['perm', 'ourloss', 'hamming', 'cw', ...]

# Attacks params for '2step' mode
ATTACK2:
  STEP: 1
  TYPE: pgd
  OBJ_TYPE: pos+struc